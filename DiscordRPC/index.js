var q=Object.create;var x=Object.defineProperty;var U=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var L=Object.getPrototypeOf,J=Object.prototype.hasOwnProperty;var u=(n=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(n,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):n)(function(n){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+n+'" is not supported')});var B=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),F=(n,e)=>{for(var t in e)x(n,t,{get:e[t],enumerable:!0})},w=(n,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of D(e))!J.call(n,r)&&r!==t&&x(n,r,{get:()=>e[r],enumerable:!(s=U(e,r))||s.enumerable});return n},p=(n,e,t)=>(w(n,e,"default"),t&&w(t,e,"default")),C=(n,e,t)=>(t=n!=null?q(L(n)):{},w(e||!n||!n.__esModule?x(t,"default",{value:n,enumerable:!0}):t,n));var y=B((se,b)=>{var z=u("net"),K=u("os"),{request:G}=u("https"),O=u("crypto");function H(){return K.platform=="win32"?"\\\\?\\pipe\\":(process.env.XDG_RUNTIME_DIR||process.env.TMPDIR||process.env.TMP||process.env.TEMP)+"/"||"/tmp/"}async function V(){for(var n=0;n<10;n++){var e=H()+"discord-ipc-"+n;let t=await new Promise(s=>{let r=z.connect(e,i=>s(r)).on("error",i=>s()).on("timeout",i=>s()).setTimeout(1e4)});if(t)return t}}function c(n,e,t){typeof t=="string"&&(t=Buffer.from(t,"utf8"));let s=Buffer.alloc(8+t.length);s.writeUInt32LE(e,0),s.writeUInt32LE(t.length,4),s.write(t.toString(),8);try{n.write(s)}catch{}}function Y(n){let e=n.readUInt32LE(0),t=n.readUInt32LE(4),s=n.slice(8,8+t).toString();return{opcode:e,data:s}}function $(){let n=O.randomBytes(32).toString("base64").replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,""),e=O.createHash("sha256").update(n).digest("base64").replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"");return{codeVerifier:n,codeChallenge:e,challengeMethod:"S256"}}function l(){let n="0123456789abcdef";return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,e=>e=="x"?n[Math.floor(Math.random()*16)]:n[Math.floor(Math.random()*4)+8])}var I=class extends EventEmitter{constructor(){super(),this._socket=null,this._waitingRequests=[]}emit(){}_processMessage(e){let t=e.opcode,s=JSON.parse(e.data);if(t==2)return this._socket.destroy();if(t==3)return c(this._socket,4,e.data);switch(s.cmd){case"DISPATCH":s.evt=="ERROR"?this.emit("error",s.data):this.emit(s.evt,s.data);break;default:if(s.nonce&&this._waitingRequests.find(r=>r.nonce===s.nonce)){try{this._waitingRequests.find(r=>r.nonce===s.nonce).callback.call(null,s)}catch{}this._waitingRequests=this._waitingRequests.filter(r=>r.nonce!==s.nonce)}break}}async _waitForResponse(e){return new Promise((t,s)=>{this._waitingRequests.push({nonce:e,callback:t}),setTimeout(r=>s(new Error("Request timed out")),1e4)})}subscribe(e){c(this._socket,1,JSON.stringify({cmd:"SUBSCRIBE",evt:e,nonce:l()}))}unsubscribe(e){c(this._socket,1,JSON.stringify({cmd:"UNSUBSCRIBE",evt:e,nonce:l()}))}connect(e){if(e=Object.assign({scopes:[],clientId:""},e),!e.clientId)throw new Error("clientId is required");return this.scopes=e.scopes,new Promise(async(t,s)=>{if(this._socket=await V(),this._socket){this._socket.on("data",i=>this._processMessage(Y(i))),this._socket.once("close",i=>this.emit("close")),c(this._socket,0,JSON.stringify({v:1,client_id:e.clientId}));let r=setTimeout(i=>s(new Error("Connection timed out")),1e4);this.once("READY",async i=>{if(clearTimeout(r),this.user=i.user,this.config=i.config,e.scopes.length>0){let a=$(),m=l();c(this._socket,1,JSON.stringify({cmd:"AUTHORIZE",args:{client_id:e.clientId,scopes:e.scopes,code_challenge:a.codeChallenge,code_challenge_method:"S256"},nonce:m}));let h=await this._waitForResponse(m).catch(()=>{});if(!h)return;if(h.evt=="ERROR")return t(),this.emit("ready");let o=await new Promise((E,M)=>{let R=G("https://discord.com/api/oauth2/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"}},_=>{let k="";_.on("end",P=>E(JSON.parse(k))),_.on("data",P=>k+=P)}).on("error",_=>M());R.write(new URLSearchParams({client_id:e.clientId,code:h.data.code,grant_type:"authorization_code",code_verifier:a.codeVerifier}).toString()),R.end()}).catch(E=>{});o&&o.access_token?(this.accessToken=o.access_token,this.refreshToken=o.refresh_token,this.tokenExpiresAt=Date.now()+o.expires_in*1e3,await this.authenticate(),t(),this.emit("ready")):(t(),this.emit("ready"))}else t(),this.emit("ready")})}else s(new Error("Could not connect"))})}setActivity(e){if(!e)return this.clearActivity();let t={state:e.state,details:e.details,timestamps:{start:e.startTimestamp,end:e.endTimestamp},assets:{large_image:e.largeImageKey,large_text:e.largeImageText,small_image:e.smallImageKey,small_text:e.smallImageText},party:{id:e.partyId,size:e.partySize&&e.partyMax?[e.partySize,e.partyMax]:void 0},secrets:{match:e.matchSecret,join:e.joinSecret,spectate:e.spectateSecret},instance:e.instance,buttons:e.buttons};return Object.keys(t).forEach(s=>{t[s]||delete t[s],t[s]instanceof Array&&t[s].length==0&&delete t[s];function r(i){return Object.keys(i).forEach(a=>{i[a]||delete i[a],i[a]instanceof Array&&i[a].length==0&&delete i[a],i[a]instanceof Object&&r(i[a])}),i}t[s]instanceof Object&&(t[s]=r(t[s])),t[s]instanceof Object&&Object.keys(t[s]).length==0&&delete t[s]}),new Promise(async(s,r)=>{let i=l();c(this._socket,1,JSON.stringify({cmd:"SET_ACTIVITY",args:{pid:process.pid,activity:t},nonce:i}));let a=await this._waitForResponse(i).catch(()=>{});if(!a)return r(new Error("No response received"));a.data.code?r(a.data):s()})}clearActivity(){return new Promise(async(e,t)=>{let s=l();c(this._socket,1,JSON.stringify({cmd:"SET_ACTIVITY",args:{pid:process.pid},nonce:s}));let r=await this._waitForResponse(s).catch(()=>{});if(!r)return t(new Error("No response received"));r.data&&r.data.code?t(r.data):e()})}authenticate(e){return e=e||this.accessToken,new Promise(async(t,s)=>{let r=l();c(this._socket,1,JSON.stringify({cmd:"AUTHENTICATE",args:{access_token:e},nonce:r}));let i=await this._waitForResponse(r).catch(()=>{});if(!i)return s(new Error("No response received"));i.data&&i.data.code?s(i.data):t()})}getGuild(e){return new Promise(async(t,s)=>{let r=l();c(this._socket,1,JSON.stringify({cmd:"GET_GUILD",args:{guild_id:e},nonce:r}));let i=await this._waitForResponse(r).catch(()=>{});if(!i)return s(new Error("No response received"));i.evt=="ERROR"?s(i.data):t(i.data)})}destroy(){this._socket&&this._socket.destroy(),this._socket=null}};b.exports={Client:I,register(n){let e;try{e=u("electron").app.setAsDefaultProtocolClient.bind(app)}catch{try{e=u("register-scheme")}catch{}}typeof e!="function"&&(e=t=>!1),e(`discord-${n}`)}}});import{store as X,intercept as Z,currentMediaItem as Q}from"@neptune";import{getMediaURLFromID as W}from"@neptune/utils";var d={};F(d,{AutoClient:()=>f});p(d,C(y()));var A;Promise.resolve().then(()=>C(y())).then(n=>{A=n});var f=class extends A.Client{closeinterval;clientId;transport;authenticate;authorize;constructor(e){super(e),e.transport=="ipc"&&this.transport.on("close",this.onClose.bind(this))}onClose(){this.closeinterval||(this.closeinterval=setInterval(()=>{this.transport.connect().then(()=>{this.closeinterval&&clearInterval(this.closeinterval),this.closeinterval=void 0}).catch(()=>{})},15e3),this.closeinterval.unref())}endlessConnect(e){return new Promise(t=>{this.clientId=e;let s=()=>{this.transport.connect(this.clientId).then(()=>{clearInterval(r)}).catch(()=>{})},r=setInterval(s,15e3);r.unref(),s(),this.once("connected",()=>{t()})})}async endlessLogin(e){if(this.options.transport!="ipc")throw new Error("Endless login is currently only supported on the IPC transport");return await this.endlessConnect(e.clientId),e.scopes?(e.accessToken||(e.accessToken=await this.authorize(e)),this.authenticate(e.accessToken)):(this.emit("ready"),this)}};import{html as j}from"@neptune/voby";import{storage as g}from"@plugin";var v=[],ee="1130698654987067493";g.keepRpcOnPause??=!0;var T=n=>n.length>=128?n.slice(0,125)+"...":n,S=new f({transport:"ipc"}),N=S.endlessLogin({clientId:ee});N.then(()=>{v.push(Z("playbackControls/TIME_UPDATE",([n])=>{let e=X.getState(),{item:t,type:s}=Q;if(s!="track")return;let r=W(t.album.cover),i=new Date,a=i.getTime()/1e3|0,m=i.setSeconds(i.getSeconds()+(t.duration-n)),h=e.playbackControls.playbackState=="NOT_PLAYING";if(h&&g.keepRpcOnPause===!1)return S.clearActivity();S.setActivity({...h?{smallImageKey:"paused-icon",smallImageText:"Paused"}:{startTimestamp:a,endTimestamp:m},details:T(t.title),state:T("by "+t.artists.map(o=>o.name).join(", ")),largeImageKey:r,largeImageText:T(t.album.title)})}))});async function le(){let n=await N;v.forEach(e=>e());try{n.clearActivity(),n.destroy()}catch{}}function de(){return j`
    <div style="display:flex;justify-content:space-between">
      <label for="keep-rpc-on-pause">Keep RPC on pause</label>
      <input
        id="keep-rpc-on-pause"
        type="checkbox"
        checked=${g.keepRpcOnPause}
        onChange=${n=>g.keepRpcOnPause=n.target.checked}
      />
    </div>
  `}export{de as Settings,le as onUnload};
